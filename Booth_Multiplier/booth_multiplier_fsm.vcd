$date
	Sat Aug  9 12:36:00 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module booth_multiplier_fsm_tb $end
$var wire 1 ! valid $end
$var wire 8 " Z [7:0] $end
$var reg 4 # X [3:0] $end
$var reg 4 $ Y [3:0] $end
$var reg 1 % clk $end
$var reg 1 & rst $end
$var reg 1 ' start $end
$scope module uut $end
$var wire 4 ( X [3:0] $end
$var wire 4 ) Y [3:0] $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var wire 1 ' start $end
$var parameter 1 * IDLE $end
$var parameter 1 + START $end
$var reg 8 , Z [7:0] $end
$var reg 8 - Z_temp [7:0] $end
$var reg 2 . count [1:0] $end
$var reg 8 / next_Z [7:0] $end
$var reg 2 0 next_count [1:0] $end
$var reg 1 1 next_state $end
$var reg 2 2 next_temp [1:0] $end
$var reg 1 3 next_valid $end
$var reg 1 4 pres_state $end
$var reg 2 5 temp [1:0] $end
$var reg 1 ! valid $end
$upscope $end
$scope task start_pulse $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
1+
0*
$end
#0
$dumpvars
b0 5
04
03
b0 2
01
b0 0
b0 /
b0 .
bx -
b0 ,
b0 )
b0 (
0'
0&
0%
b0 $
b0 #
b0 "
0!
$end
#5000
1%
#10000
0%
#15000
1%
1&
#20000
0%
#25000
1%
b11 $
b11 )
b100 #
b100 (
#30000
b100 /
11
1'
0%
#35000
b10 /
b1 0
b100 -
14
b100 "
b100 ,
1%
#40000
0'
0%
#45000
b1 /
b10 0
b10 2
b10 -
b1 .
b10 "
b10 ,
1%
#50000
0%
#55000
b11101000 /
b11 0
b1 2
b11010001 -
b10 .
b10 5
b1 "
b1 ,
1%
#60000
0%
#65000
01
13
b1100 /
b0 0
bx0 2
b11000 -
b11 .
b1 5
b11101000 "
b11101000 ,
1%
#70000
0%
#75000
b0 /
b0 2
03
b0 .
bx0 5
04
1!
b1100 "
b1100 ,
1%
#80000
0%
#85000
b0 5
0!
b0 "
b0 ,
1%
b10 $
b10 )
b1011 #
b1011 (
#90000
b1011 /
b10 2
11
1'
0%
#95000
b11110101 /
b1 0
b11 2
b11101011 -
b10 5
14
b1011 "
b1011 ,
1%
#100000
0'
0%
#105000
b11111010 /
b10 0
b1 2
b11110101 -
b1 .
b11 5
b11110101 "
b11110101 ,
1%
#110000
0%
#115000
b1101 /
b11 0
b10 2
b11010 -
b10 .
b1 5
b11111010 "
b11111010 ,
1%
#120000
0%
#125000
01
13
b11110110 /
b0 0
bx1 2
b11101101 -
b11 .
b10 5
b1101 "
b1101 ,
1%
#130000
0%
#135000
b0 /
b0 2
03
b0 .
bx1 5
04
1!
b11110110 "
b11110110 ,
1%
#140000
0%
#145000
b0 5
0!
b0 "
b0 ,
1%
b1101 $
b1101 )
b1101 #
b1101 (
#150000
b1101 /
b10 2
11
1'
0%
#155000
b11110 /
b1 0
b1 2
b111101 -
b10 5
14
b1101 "
b1101 ,
1%
#160000
0'
0%
#165000
b11110111 /
b10 0
b10 2
b11101110 -
b1 .
b1 5
b11110 "
b11110 ,
1%
#170000
0%
#175000
b10011 /
b11 0
b11 2
b100111 -
b10 .
b10 5
b11110111 "
b11110111 ,
1%
#180000
0%
#185000
01
13
b1001 /
b0 0
bx1 2
b10011 -
b11 .
b11 5
b10011 "
b10011 ,
1%
#190000
0%
#195000
b0 /
b0 2
03
b0 .
bx1 5
04
1!
b1001 "
b1001 ,
1%
#200000
0%
#205000
b0 5
0!
b0 "
b0 ,
1%
b1100 $
b1100 )
b111 #
b111 (
#210000
b111 /
b10 2
11
1'
0%
#215000
b100011 /
b1 0
b11 2
b1000111 -
b10 5
14
b111 "
b111 ,
1%
#220000
0'
0%
#225000
b10001 /
b10 0
b100011 -
b1 .
b11 5
b100011 "
b100011 ,
1%
#230000
0%
#235000
b1000 /
b11 0
b1 2
b10001 -
b10 .
b10001 "
b10001 ,
1%
#240000
0%
#245000
01
13
b11100100 /
b0 0
bx0 2
b11001000 -
b11 .
b1 5
b1000 "
b1000 ,
1%
#250000
0%
#255000
b0 /
b0 2
03
b0 .
bx0 5
04
1!
b11100100 "
b11100100 ,
1%
#260000
0%
#265000
b0 5
0!
b0 "
b0 ,
1%
b0 $
b0 )
b0 #
b0 (
#270000
11
1'
0%
#275000
b1 0
b0 -
14
1%
#280000
0'
0%
#285000
b10 0
b1 .
1%
#290000
0%
#295000
b11 0
b10 .
1%
#300000
0%
#305000
01
13
b0 0
bx0 2
b11 .
1%
#310000
0%
#315000
b0 2
03
b0 .
bx0 5
04
1!
1%
#320000
0%
#325000
b0 5
0!
1%

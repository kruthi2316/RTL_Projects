$date
	Fri Aug  8 14:12:06 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module universal_shift_register_tb $end
$var wire 1 ! s_out $end
$var wire 4 " p_out [3:0] $end
$var reg 1 # clk $end
$var reg 2 $ mode [1:0] $end
$var reg 4 % p_in [3:0] $end
$var reg 1 & rst $end
$var reg 1 ' s_in $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 2 ( mode [1:0] $end
$var wire 4 ) p_in [3:0] $end
$var wire 4 * p_out [3:0] $end
$var wire 1 & rst $end
$var wire 1 ' s_in $end
$var wire 1 ! s_out $end
$var reg 4 + shift_reg [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 +
b0 *
b0 )
b0 (
0'
1&
b0 %
b0 $
0#
b0 "
0!
$end
#5000
1#
#10000
0#
b1101 %
b1101 )
b10 $
b10 (
0&
#15000
1!
b1101 "
b1101 *
b1101 +
1#
#20000
0#
b0 $
b0 (
#25000
1#
#30000
0#
1'
b1 $
b1 (
#35000
b1011 "
b1011 *
b1011 +
1#
#40000
0#
0'
#45000
0!
b110 "
b110 *
b110 +
1#
#50000
0#
1'
b11 $
b11 (
#55000
1!
b1011 "
b1011 *
b1011 +
1#
#60000
0#
#65000
b1101 "
b1101 *
b1101 +
1#
#70000
0#
